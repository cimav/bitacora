:javascript

  var zipTimer;

  function edit_description(id) {
    $("#file-" + id + " .file-desc").hide();
    $("#file-" + id + " .file-details").hide();
    $("#file-" + id + " .file-desc-form").show();
    $("#file-" + id + " .file-desc-form input").focus();
  }


  $(document).on('change', '#service_file_file', function() {
    $("#item-upload-file-form").submit();
  });

  $(document).on('change', '.file_type_combo', function() {
    $(this).closest('form').submit();
  });


  $(document).on('ajax:success', '.file-desc-form', function(evt, data, status, xhr) {
    var res = $.parseJSON(xhr.responseText);
    id = res['id'];
    $("#file-" + id + " .file-desc-form").hide();
    $("#file-" + id + " .file-desc").show();
    $("#file-" + id + " .file-desc").removeClass('icon-ok');
    $("#file-" + id + " .file-desc").removeClass('icon-file');
    $("#file-" + id + " .file-icon").addClass(res['newtypeicon']);
    $("#file-" + id + " .file-desc a").html(res['newdesc']);
    $("#file-" + id + " .file-details").show();
  });

  $(document).on('ajax:beforeSend', '.file-desc-form', function(ev, xhr, settings) {
    $(this).closest('input').addClass("loading");
  });
  
  $(document).on('ajax:success', '.delete-file', function(data, status, xhr) {
    $(this).closest('tr').hide("slow", function() { $(this).remove(); });
    $('#content-panel').html(status);
  });

  $(document).on('ajax:beforeSend', '.delete-file', function(ev, xhr, settings) {
     $(this).closest('tr').addClass("loading");
  });

  $(document).on('click', '#zip-link', function() {
    sample_id = $(this).attr('data-sample-id');
    url = '/service_files/zip_ready/' + sample_id;
    $.get(url, {}, function(data) {
      if (data.ready) {
        window.location = data.url;
      } else {
        url = '/service_files/generate_zip/' + sample_id;
        $.get(url, {}, function(data) {
          if (data['generate']) {
            $('#zip-link').html('Generando...');
            zipTimer = setInterval(checkZip, 1000);
          } else {
            alert('Fallo al intentar generar ZIP');
          }
        }, 'json');
      }
    }, 'json');
  });

  function checkZip() {
    sample_id = $("#service_file_sample_id").val();
    url = '/service_files/zip_ready/' + sample_id;
    $.get(url, {}, function(data) {
      if (data.ready) {
        $('#zip-link').html('Descargar ZIP');
        clearInterval(zipTimer);
        window.location = data.url;
      }
    }, 'json');
  }

#upload-area
  - @service_file = ServiceFile.new
  = form_for(@service_file, :html => {:id => 'item-upload-file-form', :multipart => true}) do |f|
    = f.hidden_field :service_request_id, {:value => @service_request_id }
    = f.hidden_field :sample_id, {:value => @sample_id }
    = f.hidden_field :requested_service_id, {:value => @requested_service_id }
    #upload-box
      = f.file_field :file, {"multiple" => "multiple"}
      .upload Subir archivos
      .upload-msg Puedes seleccionar varios archivos a la vez para subir.
  #files-area
    - cur_serv = ''
    - others_header = false;
    - @req_services.each do |rs|
      - if rs.id.to_i != @requested_service_id.to_i && !others_header
        - others_header = true
        %h4= "Archivos en otros servicios"
      %table.table.table-striped.table-bordered
        %tr
          %th{:colspan => 3}
            %span.service-bullet{:class => "status_#{rs.status}"}= "%02d" %  rs.consecutive
            = rs.laboratory_service.name
        - the_files = rs.service_files.where(:status => ServiceFile::ACTIVE)
        - if the_files.count == 0
          %tr
            %td.empty-cell= "No hay archivos"
        - the_files.each do |service_file|
          %tr{'id' => "file-#{service_file.id}"}
            - if File.extname(service_file.file.to_s) == ''
              - ext = 'unknown'
            - else 
              - ext = File.extname(service_file.file.to_s)[1..-1]
            %td{"class" => "file-entry type-unknown type-" + ext, "title" => File.basename(service_file.file.to_s)}
              = form_for(service_file, :remote => true, :html => {:'data-type' => 'html', :class => 'file-desc-form'}) do |ff|
                - t_options = "<option value=\"#{ServiceFile::FILE}\">Documento</option>"
                - t_options += "<option value=\"#{ServiceFile::FINAL_REPORT}\">Reporte Final</option>"
                = ff.select :file_type, t_options.html_safe, {}, {:class => 'file_type_combo', :id => "file_type_id_#{service_file.id}"}
                = ff.text_field :description, :class => 'description_field', :id => "description_#{service_file.id}"
              %span.file-desc{:title => service_file.type_text}
                %i{:class => "file-icon #{service_file.file_type_icon}"}
                %a{'href' => "/service_files/#{service_file.id}/file"}
                  = service_file.description
              %br
              %span.file-details= ext.upcase + ", " + number_to_human_size(File.size(service_file.file.to_s)) + ". Subido por #{service_file.user.full_name}"
              - if service_file.user_id == current_user.id
                = link_to "×", {:controller => "service_files", :action => "remove_file", :id => service_file.id, :remote => true}, :class => 'close delete-file', data: { confirm: "¿Estas seguro?" }
    #download-zip
      %a#zip-link{"data-sample-id" => @sample_id}= "Descargar ZIP de todos los servicios"


  .clearfix

.clearfix
